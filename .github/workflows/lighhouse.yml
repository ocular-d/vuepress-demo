name: Build

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master

    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: '10.18'

    - name: install
      working-directory: .
      run: yarn install

    - name: build
      working-directory: .
      run: yarn docs:build

    # - name: upload build
    #   uses: actions/upload-artifact@v1
    #   with:
    #       name: build
    #       path: ./docs/.vuepress/dist

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v2
      with:
        configPath: "./lighthouserc.json"
        temporaryPublicStorage: true

  # static-dist-dir:
  #   name: Lighthouse
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download Config
  #       uses: actions/checkout@master

  #     - name: Download HTML
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: build

  #     - name: Run Lighthouse against a static dist dir
  #       uses: treosh/lighthouse-ci-action@v2
  #       with:
  #         # no urls needed, since it uses local folder to scan .html files
  #         configPath: './lighthouserc.json'
  # links:
  #   name: Test Links
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download math result for job 1
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: build
  #     - shell: bash
  #       run: ls -la build

  #     - name: Link Checker
  #       id: lc
  #       uses: peter-evans/link-checker@v1
  #       with:
  #         args: -d build -x "enterprise\.onna\.com\/*|onna\.io" -r *

  #     - name: Create Issue From File
  #       uses: peter-evans/create-issue-from-file@v2
  #       with:
  #         title: Link Checker Report
  #         content-filepath: ./link-checker/out.md
  #         labels: report, automated issue

  #     - name: Fail if there were link errors
  #       run: exit ${{ steps.lc.outputs.exit_code }}
